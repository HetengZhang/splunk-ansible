---
- name: Construct new build url if ssl is disabled
  set_fact:
    new_build_location: "{{ splunk.build_location | replace('https', 'http') }}"
  when:
  - splunk.build_location | regex_search("^(http).*")
  - cert_prefix is defined
  - cert_prefix == "http"

- name: Adjust current build url
  set_fact:
    splunk:
      build_location: "{{ splunk.build_location | combine(new_build_location,recursive=True) }}"
  when: new_build_location is defined

- name: Remove old manifest files
  file:
    path: "{{ item.path }}"
    state: "absent"
  ignore_errors: yes
  become: yes
  become_method: sudo
  become_user: root
  with_items:
  - "{{ manifests.files }}"
  when:
  - splunk.allow_upgrade is defined
  - splunk.allow_upgrade | bool

- name: Download Splunk package (Windows)
  get_url:
    url: "{{ splunk.build_location }}"
    dest: "/tmp/splunk.tgz"
    mode: 0777
    timeout: 600
    force: true
  register: download_result
  until: download_result is succeeded
  retries: 5
  delay: 10
  when:
  - splunk.build_location | regex_search("^(http).*")
  - ansible_system is match("CYGWIN*|Win32NT")

- name: Install Splunk (Linux)
  unarchive:
    src: "{{ splunk.build_location }}"
    dest: "{{ splunk.opt }}"
    owner: "{{ splunk.user }}"
    group: "{{ splunk.group }}"
    remote_src: "{{ splunk.build_remote_src }}"
  when: ansible_system is match("Linux")
  register: install_result
  until: install_result is succeeded
  retries: "{{ retry_num }}"
  delay: 3

- name: Install Splunk (Windows)
  command: "msiexec /I /tmp/splunk.tgz AGREETOLICENSE=yes LAUNCHSPLUNK=0 INSTALLDIR=C:\\\\opt\\\\{{ splunk.tar_dir }} /passive /qn"
  when: ansible_system is match("CYGWIN*|Win32NT")
  register: install_result
  until: install_result is succeeded
  retries: "{{ retry_num }}"
  delay: 3

- name: Remove installers
  file:
    dest: "{{ item }}"
    state: "absent"
  ignore_errors: yes
  become: yes
  become_method: sudo
  become_user: root
  with_items:
  - "/tmp/splunk.tgz"
  - "{{ splunk.build_location }}"
